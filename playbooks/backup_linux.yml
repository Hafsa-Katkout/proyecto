---
- name: Crear backup de /etc en la máquina remota
  hosts: all
  become: yes
  tasks:
    - name: Prueba de conexión
      ping:

    - name: Comprimir /etc en la máquina remota
      command: tar czf /tmp/etc_backup.tar.gz /etc

- name: Descargar el backup a la máquina local con nombre incremental
  hosts: localhost
  vars:
    local_backup_base: "/home/ubuntu/backups/etc_backup"
    ext: ".tar.gz"
  tasks:
    - name: Asegurar que la carpeta local de backups exista
      file:
        path: /home/ubuntu/backups
        state: directory
        mode: '0755'

    - name: Obtener nombres existentes
      find:
        paths: /home/ubuntu/backups
        patterns: "etc_backup*.tar.gz"
      register: existing_files
      delegate_to: localhost

    - name: Calcular siguiente número disponible
      set_fact:
        backup_counter: >-
          {{
            (
              existing_files.files
              | map(attribute='path')
              | map('basename')
              | map('regex_search', '^etc_backup(\\d*)\\.tar\\.gz$')
              | map('last')
              | map('int')
              | list
              | max(default=0)
            ) + 1
          }}

    - name: Definir nombre final del archivo
      set_fact:
        backup_filename: >-
          {{
            local_backup_base ~
            ('' if backup_counter == 1 else backup_counter) ~
            ext
          }}

    - name: Copiar backup desde la máquina remota
      ansible.builtin.fetch:
        src: /tmp/etc_backup.tar.gz
        dest: "{{ backup_filename }}"
        flat: yes

- name: Limpiar archivo de backup temporal en la máquina remota
  hosts: all
  become: yes
  tasks:
    - name: Eliminar el archivo comprimido del remoto (limpieza)
      file:
        path: /tmp/etc_backup.tar.gz
        state: absent
